/ {
  macros {
    utf_ellipsis: utf_ellipsis { // …
      compatible = "zmk,behavior-macro";
      wait-ms = <0>;
      tap-ms = <0>;
      #binding-cells = <0>;
      bindings
        = < &macro_tap &kp LC(LS(U)) >
        , < &macro_wait_time 50 >
        , < &macro_tap &kp N2 &kp N0 &kp N2 &kp N6 >
        , < &macro_wait_time 20 >
        , < &macro_tap &kp ENTER >;
    };
    utf_upper_a: utf_upper_a { // ª
      compatible = "zmk,behavior-macro";
      wait-ms = <0>;
      tap-ms = <0>;
      #binding-cells = <0>;
      bindings
        = < &macro_tap &kp LC(LS(U)) >
        , < &macro_wait_time 50 >
        , < &macro_tap &kp N0 &kp N0 &kp A &kp A >
        , < &macro_wait_time 20 >
        , < &macro_tap &kp ENTER >;
    };
    utf_upper_o: utf_upper_o { // º
      compatible = "zmk,behavior-macro";
      wait-ms = <0>;
      tap-ms = <0>;
      #binding-cells = <0>;
      bindings
        = < &macro_tap &kp LC(LS(U)) >
        , < &macro_wait_time 50 >
        , < &macro_tap &kp N0 &kp N0 &kp B &kp A >
        , < &macro_wait_time 20 >
        , < &macro_tap &kp ENTER >;
    };
    utf_ndash: utf_ndash { // —
      compatible = "zmk,behavior-macro";
      wait-ms = <0>;
      tap-ms = <0>;
      #binding-cells = <0>;
      bindings
        = < &macro_tap &kp LC(LS(U)) >
        , < &macro_wait_time 50 >
        , < &macro_tap &kp N2 &kp N0 &kp N1 &kp N3 >
        , < &macro_wait_time 20 >
        , < &macro_tap &kp ENTER >;
    };
    utf_mdash: utf_mdash { // —
      compatible = "zmk,behavior-macro";
      wait-ms = <0>;
      tap-ms = <0>;
      #binding-cells = <0>;
      bindings
        = < &macro_tap &kp LC(LS(U)) >
        , < &macro_wait_time 50 >
        , < &macro_tap &kp N2 &kp N0 &kp N1 &kp N4 >
        , < &macro_wait_time 20 >
        , < &macro_tap &kp ENTER >;
    };
    utf_nbsp: utf_nbsp {
      compatible = "zmk,behavior-macro";
      wait-ms = <0>;
      tap-ms = <0>;
      #binding-cells = <0>;
      bindings
        = < &macro_tap &kp LC(LS(U)) >
        , < &macro_wait_time 50 >
        , < &macro_tap &kp N0 &kp N0 &kp A &kp 0 >
        , < &macro_wait_time 20 >
        , < &macro_tap &kp ENTER >;
    };
    type_qui: type_qui { // qui
      compatible = "zmk,behavior-macro";
      wait-ms = <0>;
      tap-ms = <0>;
      #binding-cells = <0>;
      bindings
        = < &macro_tap &kp Q &kp U &kp I >;
    };
    type_que: type_que { // que
      compatible = "zmk,behavior-macro";
      wait-ms = <0>;
      tap-ms = <0>;
      #binding-cells = <0>;
      bindings
        = < &macro_tap &kp Q &kp U &kp E >;
    };
    type_ldotl: type_ldotl { // l·l
      compatible = "zmk,behavior-macro";
      wait-ms = <0>;
      tap-ms = <0>;
      #binding-cells = <0>;
      bindings
        = < &macro_tap &kp L &kp LC(LS(U)) >
        , < &macro_wait_time 50 >
        , < &macro_tap &kp N0 &kp N0 &kp B &kp 7 >
        , < &macro_wait_time 20 >
        , < &macro_tap &kp ENTER >
        , < &macro_tap &kp L >;
    };
    type_cio: type_cio { // ció
      compatible = "zmk,behavior-macro";
      wait-ms = <0>;
      tap-ms = <0>;
      #binding-cells = <0>;
      bindings
        = < &macro_tap &kp C &kp I &kp RA(O) >;
    };
    type_qui_acute: type_qui_acute { // quí
      compatible = "zmk,behavior-macro";
      wait-ms = <0>;
      tap-ms = <0>;
      #binding-cells = <0>;
      bindings
        = < &macro_tap &kp Q &kp U &kp RA(I) >;
    };
    type_que_acute: type_que_acute { // qué
      compatible = "zmk,behavior-macro";
      wait-ms = <0>;
      tap-ms = <0>;
      #binding-cells = <0>;
      bindings
        = < &macro_tap &kp Q &kp U &kp RA(E) >;
    };
    type_que_grave: type_que_grave { // què
      compatible = "zmk,behavior-macro";
      wait-ms = <0>;
      tap-ms = <0>;
      #binding-cells = <0>;
      bindings
        = < &macro_tap &kp Q &kp U &kp RA(GRAVE) &kp E >;
    };
    type_000: type_000 { // 000
      compatible = "zmk,behavior-macro";
      wait-ms = <0>;
      tap-ms = <0>;
      #binding-cells = <0>;
      bindings
        = < &macro_tap &kp N0 &kp N0 &kp N0 >;
    };
  };
};
